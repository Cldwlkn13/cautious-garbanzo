@using Betfair.ExchangeComparison.Pages.Models;
@using Betfair.ExchangeComparison.Domain.Extensions;
@model IGrouping<string, BestRunner>
@{
    var winOrEachWay = ViewData["WinOrEachWay"] as string;
}

<div class="col-12">
    <div class="m-2 p-1 bg-secondary border rounded">
        <h6 class="text-orange">@Model.Key.Substring(0, @Model.Key.Length - 8)</h6>

        @foreach (var groupedRunner in @Model.GroupBy(r => r.MarketDetail.marketStartTime.ConvertUtcToBritishIrishLocalTime()))
        {
            <div class="mt-2">
                <span class="text-dark">@groupedRunner.Key.ToString("HH:mm")</span> -
                <span class="text-info">@groupedRunner.First().MarketDetail.numberOfPlaces</span>
                <span class="text-info">1/@groupedRunner.First().MarketDetail.placeFractionDenominator</span>
            </div>

            @foreach (var bestRunner in @groupedRunner.OrderByDescending(r => r.ExpectedValue))
            {
                if (winOrEachWay == "Win")
                {
                    @await Html.PartialAsync("./BestWinRunnerPartial.cshtml", bestRunner)
                }
                else
                {
                    @await Html.PartialAsync("./BestEachWayRunnerPartial.cshtml", bestRunner)
                }
            }
        }
    </div>
</div>